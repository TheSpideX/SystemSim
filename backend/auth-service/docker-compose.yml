version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: systemsim-auth-postgres
    environment:
      POSTGRES_DB: systemsim_auth
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - auth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d systemsim_auth"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: systemsim-auth-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - auth-network
    command: redis-server --appendonly yes --requirepass ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: systemsim-auth-service
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - GIN_MODE=development
      - DATABASE_URL=postgres://auth_user:auth_password@postgres:5432/systemsim_auth?sslmode=disable
      - REDIS_ADDR=redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-must-be-at-least-32-characters
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - auth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  auth-network:
    driver: bridge
